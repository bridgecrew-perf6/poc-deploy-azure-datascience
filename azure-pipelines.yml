pool:
  vmImage: ubuntu-latest

trigger:
  - main

variables:
  - name: adfDevSubscription
    value: '<SUBSCRIPTION-ID>'
  - name: adfDevResourceGroup
    value: '<RESOURCE-GROUP-NAME>'
  - name: adfDevFactoryName
    value: '<DEV-ADF-NAME>'

stages:
  - stage: build_arm_templates
    displayName: 'Build ARM Templates'
    jobs:
      - job: generate_arm
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '12.x'
          displayName: 'Install Node.js'
        - script: |
            npm --prefix '$(System.DefaultWorkingDirectory)/adf' install
          displayName: 'Install npm package'
        - script: |
            npm --prefix '$(System.DefaultWorkingDirectory)/adf' run build validate $(System.DefaultWorkingDirectory)/adf /subscriptions/$(adfDevSubscription)/resourceGroups/$(adfDevResourceGroup)/providers/Microsoft.DataFactory/factories/$(adfDevFactoryName)
          displayName: 'Validate'
        - script: |
            npm --prefix '$(System.DefaultWorkingDirectory)/adf' run build export $(System.DefaultWorkingDirectory)/adf /subscriptions/$(adfDevSubscription)/resourceGroups/$(adfDevResourceGroup)/providers/Microsoft.DataFactory/factories/$(adfDevFactoryName) 'ArmTemplate'
          displayName: 'Validate and Generate ARM template'
        - publish: '$(System.DefaultWorkingDirectory)/adf/ArmTemplate'
          artifact: 'ArmTemplates'
  - stage: deploy_adf_qa
    dependsOn: build_arm_templates
    displayName: 'Deploy ADF QA'
    variables:
      - group: 'adf-qa'
    jobs:
      - deployment: deploy_adf_qa
        environment: adf-qa
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: 'ArmTemplates'
                - task: AzureResourceManagerTemplateDeployment@3
                  inputs:
                    deploymentScope: 'Resource Group'
                    azureResourceManagerConnection: '<QA-SERVICE-CONNECTION-NAME>'
                    subscriptionId: '<QA-SUBSCRIPTION-ID>'
                    action: 'Create Or Update Resource Group'
                    resourceGroupName: '<QA-RESOURCE-GROUP-NAME>'
                    location: '<REGION>'
                    templateLocation: 'Linked artifact'
                    csmFile: '$(Pipeline.Workspace)/ArmTemplates/ARMTemplateForFactory.json'
                    csmParametersFile: '$(Pipeline.Workspace)/ArmTemplates/ARMTemplateParametersForFactory.json'
                    overrideParameters: $(overrideParameters)
                    deploymentMode: 'Incremental'
  - stage: deploy_adf_prod
    dependsOn: deploy_adf_qa
    displayName: 'Deploy ADF Prod'
    variables:
      - group: 'adf-prod'
    jobs:
      - deployment: deploy_adf_prod
        environment: adf-prod
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: 'ArmTemplates'
                - task: AzureResourceManagerTemplateDeployment@3
                  inputs:
                    deploymentScope: 'Resource Group'
                    azureResourceManagerConnection: '<PROD-SERVICE-CONNECTION-NAME>'
                    subscriptionId: '<PROD-SUBSCRIPTION-ID>'
                    action: 'Create Or Update Resource Group'
                    resourceGroupName: '<PROD-RESOURCE-GROUP-NAME>'
                    location: '<REGION>'
                    templateLocation: 'Linked artifact'
                    csmFile: '$(Pipeline.Workspace)/ArmTemplates/ARMTemplateForFactory.json'
                    csmParametersFile: '$(Pipeline.Workspace)/ArmTemplates/ARMTemplateParametersForFactory.json'
                    overrideParameters: $(overrideParameters)
                    deploymentMode: 'Incremental'
              